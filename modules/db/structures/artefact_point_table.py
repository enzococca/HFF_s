'''Created on 30 05 2021@author: Enzo Cocca'''from builtins import objectfrom sqlalchemy import Table, Column, Integer,Numeric, String, Text, MetaData, create_engine, UniqueConstraint#from geoalchemy2 import Geometryfrom ..hff_system__conn_strings import Connectionfrom ...utility.hff_system__OS_utility import Hff_OS_Utilityclass artefact_point_table(object):    # connection string postgres"    internal_connection = Connection()    # create engine and metadata    engine = create_engine(internal_connection.conn_str(), echo=True, convert_unicode=True)    metadata = MetaData(engine)    # define tables    artefact_point = Table('artefact_point', metadata,                       Column('gid', Integer, primary_key=True),                                              Column('the_geom', Text),#Geometry('MULTIPOLYGON',-1)),                                              Column('site', Text),                       Column('code', Text),                       Column('years', Integer),                       Column('link', Text),                       Column('type', Text),                       Column('x', Numeric(7,3)),                       Column('y', Numeric(7,3)),                       Column('rotation', Numeric(7,3)),                                        Column('Layer', Integer)                       # explicit/composite unique constraint.  'name' is optional.                       #UniqueConstraint('name_f_l','location', name='ID_sito_line_unico')                       )    metadata.create_all(engine)